{
  "name": "copilot-debugger",
  "displayName": "Copilot Debugger",
  "description": "Debug your code with GitHub Copilot",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.102.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "copilot-debugger.helloWorld",
        "title": "Hello World"
      }
    ],
    "languageModelTools": [
      {
        "name": "set_breakpoint",
        "displayName": "Set Breakpoint",
        "toolReferenceName": "setBreakpoint",
        "canBeReferencedInPrompt": true,
        "userDescription": "Set breakpoints",
        "modelDescription": "Set a breakpoint",
        "inputSchema": {
          "type": "object",
          "properties": {
            "file": {
              "type": "string",
              "description": "File path to set the breakpoint in"
            },
            "line": {
              "type": "integer",
              "description": "Line number to set the breakpoint at"
            }
          }
        }
      },
      {
        "name": "start_debugger",
        "displayName": "Start Debugger",
        "toolReferenceName": "startDebugger",
        "canBeReferencedInPrompt": true,
        "userDescription": "Start debugging session",
        "modelDescription": "Start a debugging session",
        "inputSchema": {
          "type": "object",
          "properties": {
            "configuration": {
              "type": "string",
              "description": "Debug configuration name (optional, defaults to first available)"
            }
          }
        }
      },
      {
        "name": "wait_for_breakpoint",
        "displayName": "Wait for Breakpoint",
        "toolReferenceName": "waitForBreakpoint",
        "canBeReferencedInPrompt": true,
        "userDescription": "Wait for the next breakpoint hit during debugging",
        "modelDescription": "Wait for the debugger to hit a breakpoint or stop execution",
        "inputSchema": {
          "type": "object",
          "properties": {
            "timeout": {
              "type": "integer",
              "description": "Optional timeout in seconds (default: 30)"
            }
          }
        }
      },
      {
        "name": "get_variables",
        "displayName": "Get Variables",
        "toolReferenceName": "getVariables",
        "canBeReferencedInPrompt": true,
        "userDescription": "Get a variable's value from the current debug session",
        "modelDescription": "Retrieve the value and type of a variable from the current debug session when stopped at a breakpoint",
        "inputSchema": {
          "type": "object",
          "properties": {
            "variableName": {
              "type": "string",
              "description": "Name of the variable to retrieve"
            }
          },
          "required": [
            "variableName"
          ]
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test",
    "format": "prettier --write .",
    "format:check": "prettier --check ."
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/vscode": "^1.102.0",
    "@typescript-eslint/eslint-plugin": "^8.31.1",
    "@typescript-eslint/parser": "^8.31.1",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2",
    "eslint": "^9.25.1",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-prettier": "^5.5.3",
    "prettier": "^3.6.2",
    "typescript": "^5.8.3"
  },
  "dependencies": {
    "debug-tracker-vscode": "^0.0.15"
  }
}
